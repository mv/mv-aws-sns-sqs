###
### To execute this script you can:
###
### 1. Use the AWS console -> Cloudformation -> Create Stack
###
### or
###
### 2. Use the awscli command line tool:
###
###    $ aws cloudformation create-stack  \
###        --stack-name my-sample-sns-sqs \
###        --template-body file://sns-sqs.template.yaml \
###        --parameters file://sample.param.json
###
###
### A parameter file must be in the following format:
###
###     [
###       { "ParameterKey": "TopicName" , "ParameterValue": "sample" },
###       { "ParameterKey": "Tag1Key"   , "ParameterValue": "App"    },
###       { "ParameterKey": "Tag1Value" , "ParameterValue": "sample" },
###       { "ParameterKey": "Tag2Key"   , "ParameterValue": "Env"    },
###       { "ParameterKey": "Tag2Value" , "ParameterValue": "test"   },
###       { "ParameterKey": "QueueRetentionPeriod" , "ParameterValue": "1209600" },
###       { "ParameterKey": "QueueAlarmDepth"      , "ParameterValue": "10000"   }
###     ]
###

AWSTemplateFormatVersion: "2010-09-09"

Description: "SNS/SQS/Messaging: with dead letter and depth alarm"

Parameters:

  TopicName: { Type: String , Default: sample-topic-for-test , Description: "Name for topic/queue" }
  Tag1Key:   { Type: String , Default: App                   , Description: "Key   for Tag1: App=sample" }
  Tag1Value: { Type: String , Default: sample                , Description: "Value for Tag1: App=sample" }
  Tag2Key:   { Type: String , Default: Env                   , Description: "Key   for Tag2: Env=test"   }
  Tag2Value: { Type: String , Default: test                  , Description: "Value for Tag2: Env=test"   }

  QueueRetentionPeriod:        { Type: Number , Default: 1209600 , MinValue: 50  , MaxValue: 1209600 , Description: "SQS MessageRetentionPeriod in seconds (Default: 14d)"    }
  QueueVisibilityTimeout:      { Type: Number , Default: 60      , MinValue: 0   , MaxValue: 43200   , Description: "SQS VisibilityTimeout in seconds. (Default: 60s)"        }
  QueueReceiveMessageWaitTime: { Type: Number , Default: 5       , MinValue: 0   , MaxValue: 20      , Description: "SQS ReceiveMessageWaitTime in seconds (LongPolling: 5s)" }
  QueueMaxReceiveCount:        { Type: Number , Default: 5       , MinValue: 3   , MaxValue: 100     , Description: "SQS MaxReceiveCount (Move to DeadLetter if gt count)"    }
  QueueAlarmDepth:             { Type: Number , Default: 10000   , MinValue: 100 , MaxValue: 1000000 , Description: "SQS Alarm if msgs in queue grows beyond this count"      }

Resources:

  ###
  ### SNS
  ###   https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html
  ###
  MySNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName:   !Ref TopicName
      DisplayName: !Ref TopicName
      Subscription:
        - { "Protocol":"sqs", "Endpoint": !GetAtt [ "MySQSQueue" , "Arn" ] }


  ###
  ### SQS
  ###   https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues.html
  ###

  # VisibilityTimeout   RetentionPeriod           ReceiveMessageWaitTime
  # ------------------- ------------------------- ----------------------
  #     0s                  Min:      60s -  1m    0s
  # 43200s - 12h            Max: 1209600s - 14d   20s
  #    30s              Default:  345600s -  4d    0s
  #
  MySQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref TopicName
      VisibilityTimeout: !Ref QueueVisibilityTimeout
      MessageRetentionPeriod: !Ref QueueRetentionPeriod
      ReceiveMessageWaitTimeSeconds: !Ref QueueReceiveMessageWaitTime
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt [ "MySQSDeadLetter", "Arn" ]
        maxReceiveCount: !Ref QueueMaxReceiveCount
      Tags:
        - { "Key" : !Ref Tag1Key, "Value" : !Ref Tag1Value }
        - { "Key" : !Ref Tag2Key, "Value" : !Ref Tag2Value }

  # Ref:
  #   https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-iam.html
  #
  MyQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Id: MyQueuePolicy
        Statement:
          -
            Sid: "Allow-SQSSendMessage-From-SNSTopic"
            Effect: "Allow"
            Action: "sqs:SendMessage"
            Resource: "*"
            Principal: "*"
            Condition:
              ArnEquals: { "aws:SourceArn": !Ref MySNSTopic }
      Queues:
        - !Ref MySQSQueue

  #                               k
  # Ref:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cw-alarm.html#cfn-cloudwatch-alarms-okactions
  #
  MyQueueDepthAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Join [ '-', [ "sqs-alarm", !Ref TopicName ] ]
      AlarmDescription: "Alarm if queue depth grows beyond 'n' messages"
      Namespace: "AWS/SQS"
      MetricName: "ApproximateNumberOfMessagesVisible"
      Dimensions:
        -
          Name: "QueueName"
          Value: !GetAtt [ "MySQSQueue", "QueueName" ]
      Statistic: "Sum"
      Period: "300"
      EvaluationPeriods: "1"
      Threshold: !Ref QueueAlarmDepth
      ComparisonOperator: "GreaterThanThreshold"
    # OkActions:
    #   - !Ref AlarmTopic
    # AlarmActions:
    #   - !Ref AlarmTopic
    # InsufficientDataActions:
    #   - !Ref AlarmTopic



  ###
  ### SQS Dead Letter
  ###   https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html
  ###
  MySQSDeadLetter:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Join [ '-', [ !Ref TopicName, "dl" ] ]
      MessageRetentionPeriod: 1209600
      Tags:
        - { "Key" : !Ref Tag1Key, "Value" : !Ref Tag1Value }
        - { "Key" : !Ref Tag2Key, "Value" : !Ref Tag2Value }

  MySQSDeadLetterDepthAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Join [ '-', [ "sqs-dl-alarm", !Ref TopicName ] ]
      AlarmDescription: "Alarm if dead letter queue gets any message"
      Namespace: "AWS/SQS"
      MetricName: "ApproximateNumberOfMessagesVisible"
      Dimensions:
        -
          Name: "QueueName"
          Value: !GetAtt [ "MySQSDeadLetter", "QueueName" ]
      Statistic: "Sum"
      Period: "300"
      EvaluationPeriods: "1"
      Threshold: "1"
      ComparisonOperator: "GreaterThanThreshold"


